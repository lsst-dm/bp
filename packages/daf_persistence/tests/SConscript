# -*- python -*-
Import("env")
import glob, os

for src in Glob("*.cc"):
    env.Program(src, LIBS=env.getLibs("main test"))

#
# Tests
#
import lsst.scons.tests

tests = lsst.scons.tests.Control(env, verbose = True)
tests.run("FormatterRegistry_*.cc")
tests.run("Persistence_3.cc")
tests.run("PropertySetPersist.cc")
tests.run("PropertySet_2.cc")

if os.path.exists(os.path.join(os.environ['HOME'], ".lsst/db-auth.paf")):
    tests.run("DateTime_1.cc")
    tests.run("DbStorage_*.cc")
    tests.run("Persistence_1.cc")
    tests.run("Persistence_2.cc")
    tests.run("Persistence_2.py")
else:
    print "WARNING: No fallback database authenticator seen"
    print "Database tests are being skipped"

for test in glob.glob("*.py"):
    if test != "Persistence_2.py":
        target = tests.run(test)
        env.Depends(target,
                    "../python/lsst/daf/persistence/_persistence%s" %
                    (env['LDMODULESUFFIX']))
