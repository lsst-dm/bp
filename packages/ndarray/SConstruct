# -*- python -*-

#
# Setup our environment
#
import os.path
import eups
import lsst.scons.SConsUtils as scons

env = scons.makeEnv("ndarray", r"$HeadURL$")

m4flags = "-I%s" % os.path.join(os.path.abspath(eups.productDir("ndarray")), 'm4')

#
# Build/install things
#
for d in Split("doc lib python tests examples"):
    s = os.path.join(d, "SConscript")
    if os.path.exists(s):
        SConscript(s)

generated = ["#include/lsst/ndarray/ArrayRef.h",
             "#include/lsst/ndarray/operators.h",
             "#include/lsst/ndarray/Vector.h",
             "#include/lsst/ndarray/fft/FFTWTraits.h",
             ]
headers = [env.M4(filename, "%s.m4" % filename, M4FLAGS=m4flags) for filename in generated]

env['IgnoreFiles'] = r"(~$|\.pyc$|^\.svn$|\.o$)"

env.InstallLSST(
    env["prefix"], 
    [d for d in ("bin", "doc", "etc", "examples", "include", "lib", "ups")
     if os.path.exists(d)]
    )

scons.CleanTree(r"*~ core *.so *.os *.o *.pyc")

#
# Build TAGS files
#
files = scons.filesToTag()
if files:
    env.Command("TAGS", files, "etags -o $TARGET $SOURCES")

env.Declare()
