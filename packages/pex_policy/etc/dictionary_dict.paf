# this is a dictionary that describes the dictionary schema.  This allows 
# one to validate a dictionary.
#
# A script that validates a dictionary should also apply the following 
# assertions that cannot be captured in the dictionary syntax:
#
#  1.  the type given for a default attribute matches the type
#      specified by the type attribute.
#  2.  the type given for a allowed.min attribute matches the type
#      specified by the type attribute.
#  3.  the type given for a allowed.max attribute matches the type
#      specified by the type attribute.
#  4.  that allowed.value and allowed.min or allowed.max are not
#        specified within the same allowed attribute.  
#
definitions: {
  definitions:  {
    type:         policy
    description:  "The definitions of each term, where 
                   each parameter name is a Policy
                   parameter being defined."
    minOccurs:    1
    maxOccurs:    1

    # this is a proposed construct for providing a general definition 
    # for parameters in sub-policy that can have any name.  All the 
    # parameters covered by the same definition
    childDefinition: {
       type:         policy
       description:  "The definiton of a parameter defined by this dictionary.
                      This parameter can have any name."
       minOccurs:    0
       maxOccurs:    1  # only one occurrence with this name allowed
       dictionary: {
         type: {
           type:         string
           description:  "the type of the value expected.  If value is 'policy',
                          a dictionary for its terms can be provided via 
                          the 'dictionary' or 'dictionaryFile' attribute.  
                          Providing this definition attribute is recommended."
           minOccurs:    0
           maxOccurs:    1
           default:      undefined
           allowed:  {
              value:       int
              description: an integer value
           }
           allowed:  {
              value:       bool
              description: a boolean value
           }
           allowed:  {
              value:       double
              description: a double-precision floating-point value
           }
           allowed:  {
              value:       string
              description: a character string value
           }
           allowed:  {
              value:       policy
              description: a sub-policy: a collection of sub-parameters
           } 
           allowed:  {
              value:       file
              description: the name of a sub-policy file
           } 
         }

         description: {
           type:         string
           description:  "the semantic meaning of the term or explanation 
                          of how it will be used.  Its inclusion is highly 
                          recommended."
           minOccurs:    0
           maxOccurs:    -1   # unbounded
           default:      ""
         }

         minOccurs: {
           type:         int
           description:  "The minimun number of values expected.  <= 0 means 
                          the attribute is optional, > 0 means it is required,
                          and > 1 means that a vector value is required."
           minOccurs:    0
           maxOccurs:    1
           default:      0
         }
         maxOccurs: {
           type:         int
           description:  "The maximun number of values expected.  0 means 
                          the attribute is forbidden, 1 means it must be 
                          scalar in value, and > 1 means that an array value 
                          is allowed.  If < 0, any number of values is allowed;
                          the user should assume a vector value."
           minOccurs:    0
           maxOccurs:    1
           default:      -1
         }

         default: {
           type:         undefined   # must match type identified by type
           description:  "A value to assume if none is provide for this 
                          parameter."
           minOccurs:    0
           maxOccurs:    1
         }

         allowed: {
           type:         policy
           description:  A description of the allowed values.  
           minOccurs:    0
           maxOccurs:    -1  # unbounded
           dictionary:   {
             definitions:  {
               value:  {
                  type:         undefined
                  description:  "a description of what this value or
                                range of values represent"
                  minOccurs:    0
                  maxOccurs:    1
               }
               description:  {
                  type:         undefined
                  description:  "a description of what this value or
                                range of values represent"
                  minOccurs:    0
                  maxOccurs:    -1  # unbounded
                  default:      ""
               }
               min:  {
                  type:         undefined
                  description:  "The minimum allowed value, used for 
                                 int and double typed parameters."
                  minOccurs:    0
                  maxOccurs:    1
               }
               max:  {
                  type:         undefined
                  description:  "The maximum allowed value, used for 
                                 int and double typed parameters."
                  minOccurs:    0
                  maxOccurs:    1
               }
             }
           }
         }
         
       }
    }
  } 
}

